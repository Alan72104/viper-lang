func @main2() -> i32 {
    let i: i32 = 0;
    return i--;
}

func @main() -> i32 {
    let vec: struct Vec3 = struct Vec3 { 1, 2, 3 };

    return (i32) vec.addAll();
}

using struct Vec3 {
    private x: i64;
    private y: i64;
    private z: i64;

    func @addAll() -> i64 {
        return this->getX() + this->getY() + this->getZ();
    }

    func @getX() -> i64 = this->x;

    func @getY() -> i64 = this->y;

    func @getZ() -> i64 {
        return this->z;
    }
}

func @switchCase() -> bool {
    let viperIsGood: bool;
    let choice: i32 = 2;
    switch (choice) {
        case 0:
        case 1: {
            let temp: i32 = 3222;
            viperIsGood = false;
            break;
        }
        case 2:
            viperIsGood = false;
            // Fallthrough
        default:
            viperIsGood = true;
            break;
    }
    return viperIsGood;
}